$Id$

URGENT

Track down bytea as LO setting.  Understand then eliminate it.
Rename ci->bytea_as_longvarbinary to ci->map_vb_to_blob and REVERSE SENSE.

Add screen shots of both Windows DSN option screens.

Test the "make install" and "make dist" targets.

Test the effects of EVERY ODBC setting.  Include
    Where Yes/No vs. 0/1 must be used.

Change max_varchar_size == 0 behavior to mean "unlimited"; then change the
default of MaxVarchar from 255 to 0.  After looking at a variety of ODBC
drivers, it may not make sense to default (or possibly support at all)
"unlimited".

Run the Microsoft ODBC test.

--------------

After implement SSL again, get rid of all occurrences of "libpq", including
setting of and #ifdefs of NOT_USE_LIBPQ.

Abort processing at
connection.c:CC_send_query_append(), op switch for op 'Z'.
This state is very likely to result in deadlock.

Abort processing at
socket.c:SOCK_get_id(), the sock-reslen > 0 block ("has to eat...").
This is a serious comm error and should not be ignored.

Rename the *packet_build() function(s) so they are not misleading.  They do not
just build packets, but perform transmissions.

Move output directories out of the "src" branch, for both UNIX and Windows.

Look into wiping code that uses
Non- conninfo[_]->use_server_side_prepare, since we always use server-side
prepares.



IMPLEMENTATION OF BINARY SUPPORT:
    Seems to be entirely unused by jdbc:odbc.  It is very likely that nobody
     would ever use it.

    I have verified that SIMPLE queries of bytea values send 0 (text) cols
     and D rows.
    We so not need to support the binary ability of server-side curses (which
     only works in psqlodbc SIMPLE mode).
    Bind operations supports sending Binary parameters, and specification of
     receiving row data with binary format (1).

Fix bug that we inherited from psqlodbc:
http://archives.postgresql.org/pgsql-odbc/2007-07/msg00020.php
