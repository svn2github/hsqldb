$Id$

* Notice *  SSL capability is disabled for now.
            We will add this capability back when we have time to implement
            the necessary server-side support in the HyperSQL Engine.

This file documents building hsqlodbc from the command line, using
Microsoft Visual C++ 2008.

ONE-TIME SETUP FOR DLL BUILDING

    Install the current MS Visual C++ Express edition from
    http://msdn.microsoft.com/express .  As I write this, the current version
    is "2008" with SP1.  Until we make the build scripts more flexible, this
    is the version you need.  You can install to any directory, and you can
    certainly uncheck the option to install SQL Server.

    [ THIS STEP UNNECESSARY UNTIL WE ENABLE SSL AGAIN
    Install the current NON-LIGHT! OpenSSL for platform from
    http://slproweb.com/products/Win32OpenSSL.html (misnomer, 64 binaries too).
    Install to default location, select to install shareds to bin, not your
    Windows directory.  (I am not yet working with SSL.  I am seeing
    conflicting information as to whether OpenSSL is required on Windows.
    The code is looking like OpenSSL is needed only for libpq.. which we
    do not want, and SSPI is needed for SSL capability.) ]


ONE-TIME SETUP FOR MSI (Windows Installer) BUILDING

    Install a 3.x of Wix from http://sourceforge.net/projects/wix .
    Don't need the extra products.  Just get Wix3.*-x86-setup.zip and execute
    it.  You can change the installation directory to whatever you want, but
    be careful about changing other settings.

    Ignore the warning from the Wix installer about Votive.  You don't
    need any other products or add-ons.


BUILDING driver DLLs

    The installation of Visual C++ adds global variable VS90COMNTOOLS.
    Run %VS90COMNTOOLS%\vsvars32.bat to set up your MSV C++ build environment.

    To make the Unicode DLL (better ODBC support):
        nmake /f win32.mak CFG=Release ALL
    To make the ANSI DLL (required for some older/unmaintained/bad clients):
        nmake /f win32.mak ANSI_VERSION=yes CFG=Release ALL

    Can use target "CLEAN" instead of "ALL, for the obvious purpose.

    The output DLLs get written to directories "Release" and
    "MultibyteRelease" ("src/Release" and "src/MultibyteRelease" from the
    project home directory).  This location will be changing.

    BEWARE!!!:  If nmake fails, do not expect the real failure details to
     appear near where it aborts.  You must examine all of the nmake output.


BUILDING MSI INSTALLER

    You really need the MSI Installer, because
        Editing ODBC.ini file has no effect.
        Regedit doesn't work.

    Put the Wix program's bin directory into your search path.

    Run the nmake commands above for both the Unicode and ANSI DLLs.
    Then run the make script in the "msi-src" directory.

        cd src
        nmake /f win32.mak CFG=Release ALL
        nmake /f win32.mak ANSI_VERSION=yes CFG=Release ALL
        cd ..\msi-src
        .\make <VERSION>

    where <VERSION> is a label of the format "08.03.0401" (without the qoutes).
    The output *.msi file gets written to the same (msi-src) directory.

    It is alright to rename the *.msi output file.


REPLACING INSTALLED DRIVER

    The "Date" column in the ODBC Data Source Administrator shows the driver
     install date.

    Can uninstall by rerunning the same *.msi used to install; or run
      Control Panel / Programs and Features (Vista)
      Control Panel / Add/Remove Programs (other)

    Fortunately, DSNs for removed drivers are retained!
    Uh... unfortunately, DSNs can only be removed or edited if a compatible
    driver is not currently installed.  Therefore if you are not replacing
    a driver with a compatible one, you have better remove your DSNs first.

    I see no benefit to using the upgrade batch script, which just passes
     params to "msiexec".

    Just make sure no "running" programs are using the driver, and you do not
     need to reboot in order to pick up a newly installed driver.


**** IMPORTANT RUNTIME TIPS ****
    
    Use Control Panel / Administrative Tools / Data Sources (ODBC) to
    configure your DSNs.  (This is the Windows ODBC Data Source Administrator).

    ODBC does not allow an empty string for a DSM database name.  Therefore,
    you must specify "/" (without the quotes) to indicate the default
    database.  This setting is on the main Configure page for the DSN.

    You may want to turn on one or more of the log files at the Datasource
    or Global level of the DSN Configure screen.

    The logging destination files shown in the Data Source Administrator are
    wrong, at least in some common cases.  The MyLog file gets written in
    your home directory, if you have one.

See the RUNTIME SETTINGS section in the notes.txt file.
