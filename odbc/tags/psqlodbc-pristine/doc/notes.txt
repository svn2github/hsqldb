$Id$

CURSOR FUNCTIONALITY
Most "cursor" functionality is handled internal in client-side code
that we probably don't need to touch.  The low-leve code works with local
cursor names like "SQL_CUR0x4020d0e0".  For testing with prepared and
non-prepared queries, the string "cursor" (case-insensitive) is not going
over the wire.  There is only one occurrence of a statement with "cursor"
in the driver source code.  convert.c:
		if (SC_is_fetchcursor(stmt))
		{
			sprintf(new_statement, "%sdeclare \"%s\"%s cursor%s for ",
				new_statement, SC_cursor_name(stmt), opt_scroll, opt_hold);
Contrary to the results of my code search, the driver setting
"Use Declare/Fetch" definitely implies that it conditionally issues
DECLARE...CURSOR commands.  Though I may not see it on the wire because
the feature may be off, I should see CURSOR strings in the C code.

SERVER-SIDE PREPARES
Could mean either the EXTENDED mode commands, or the Postresql SQL commands
"PREPARE/EXECUTE/DEALLOCATE".
