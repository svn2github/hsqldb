// Generated by Refly
namespace System.Data.Hsqldb.Client.UnitTests
{
    using System;
    using TestCoverage;
    using TestDoubles;
    using NUnit.Framework;
    
    
    [TestFixture()]
    [TestSubjectClassAttribute(TestSubject=typeof(System.Data.Hsqldb.Client.HsqlParameter))]
    public class TestHsqlParameter
    {
        
        [TestSubjectMemberAttribute(MemeberName="Clone")]
        [Test()]
        public virtual void Clone()
        {
            // Create Constructor Parameters

            System.Data.Hsqldb.Client.HsqlParameter TestSubject = new System.Data.Hsqldb.Client.HsqlParameter();


            TestSubject.Clone();

            // 
            // Write your assertions here.
            // 
        }
        
        [TestSubjectMemberAttribute(MemeberName="ResetDbType")]
        [Test()]
        public virtual void ResetDbType()
        {
            // Create Constructor Parameters

            System.Data.Hsqldb.Client.HsqlParameter TestSubject = new System.Data.Hsqldb.Client.HsqlParameter();


            TestSubject.ResetDbType();

            // 
            // Write your assertions here.
            // 
        }
        
        [TestSubjectMemberAttribute(MemeberName="ToSqlLiteral")]
        [Test()]
        public virtual void ToSqlLiteral()
        {
            // Create Constructor Parameters

            System.Data.Hsqldb.Client.HsqlParameter TestSubject = new System.Data.Hsqldb.Client.HsqlParameter();


            TestSubject.ToSqlLiteral();

            // 
            // Write your assertions here.
            // 
        }
        
        [TestSubjectMemberAttribute(MemeberName="ToString")]
        [Test()]
        public virtual void ToString()
        {
            // Create Constructor Parameters

            System.Data.Hsqldb.Client.HsqlParameter TestSubject = new System.Data.Hsqldb.Client.HsqlParameter();


            TestSubject.ToString();

            // 
            // Write your assertions here.
            // 
        }
    }
}
