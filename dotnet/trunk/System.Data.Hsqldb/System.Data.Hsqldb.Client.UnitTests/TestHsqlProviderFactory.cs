// Generated by Refly
namespace System.Data.Hsqldb.Client.UnitTests
{
    using System;
    using TestCoverage;
    using TestDoubles;
    using NUnit.Framework;
    
    
    [TestFixture()]
    [TestSubjectClassAttribute(TestSubject=typeof(System.Data.Hsqldb.Client.HsqlProviderFactory))]
    public class TestHsqlProviderFactory
    {
        
        [TestSubjectMemberAttribute(MemeberName="CreateCommand")]
        [Test()]
        public virtual void CreateCommand()
        {
            // Create Constructor Parameters

            System.Data.Hsqldb.Client.HsqlProviderFactory TestSubject = new System.Data.Hsqldb.Client.HsqlProviderFactory();


            TestSubject.CreateCommand();

            // 
            // Write your assertions here.
            // 
        }
        
        [TestSubjectMemberAttribute(MemeberName="CreateCommandBuilder")]
        [Test()]
        public virtual void CreateCommandBuilder()
        {
            // Create Constructor Parameters

            System.Data.Hsqldb.Client.HsqlProviderFactory TestSubject = new System.Data.Hsqldb.Client.HsqlProviderFactory();


            TestSubject.CreateCommandBuilder();

            // 
            // Write your assertions here.
            // 
        }
        
        [TestSubjectMemberAttribute(MemeberName="CreateConnection")]
        [Test()]
        public virtual void CreateConnection()
        {
            // Create Constructor Parameters

            System.Data.Hsqldb.Client.HsqlProviderFactory TestSubject = new System.Data.Hsqldb.Client.HsqlProviderFactory();


            TestSubject.CreateConnection();

            // 
            // Write your assertions here.
            // 
        }
        
        [TestSubjectMemberAttribute(MemeberName="CreateConnectionStringBuilder")]
        [Test()]
        public virtual void CreateConnectionStringBuilder()
        {
            // Create Constructor Parameters

            System.Data.Hsqldb.Client.HsqlProviderFactory TestSubject = new System.Data.Hsqldb.Client.HsqlProviderFactory();


            TestSubject.CreateConnectionStringBuilder();

            // 
            // Write your assertions here.
            // 
        }
        
        [TestSubjectMemberAttribute(MemeberName="CreateDataAdapter")]
        [Test()]
        public virtual void CreateDataAdapter()
        {
            // Create Constructor Parameters

            System.Data.Hsqldb.Client.HsqlProviderFactory TestSubject = new System.Data.Hsqldb.Client.HsqlProviderFactory();


            TestSubject.CreateDataAdapter();

            // 
            // Write your assertions here.
            // 
        }
        
        [TestSubjectMemberAttribute(MemeberName="CreateDataSourceEnumerator")]
        [Test()]
        public virtual void CreateDataSourceEnumerator()
        {
            // Create Constructor Parameters

            System.Data.Hsqldb.Client.HsqlProviderFactory TestSubject = new System.Data.Hsqldb.Client.HsqlProviderFactory();


            TestSubject.CreateDataSourceEnumerator();

            // 
            // Write your assertions here.
            // 
        }
        
        [TestSubjectMemberAttribute(MemeberName="CreateParameter")]
        [Test()]
        public virtual void CreateParameter()
        {
            // Create Constructor Parameters

            System.Data.Hsqldb.Client.HsqlProviderFactory TestSubject = new System.Data.Hsqldb.Client.HsqlProviderFactory();


            TestSubject.CreateParameter();

            // 
            // Write your assertions here.
            // 
        }
        
        [TestSubjectMemberAttribute(MemeberName="CreatePermission")]
        [Test()]
        public virtual void CreatePermission()
        {
            // Create Constructor Parameters

            System.Data.Hsqldb.Client.HsqlProviderFactory TestSubject = new System.Data.Hsqldb.Client.HsqlProviderFactory();

            // Create Test Method Parameters

            // There is no default constuctor for the parameter state type PermissionState.
            System.Security.Permissions.PermissionState state;


            TestSubject.CreatePermission(state);

            // 
            // Write your assertions here.
            // 
        }
    }
}
