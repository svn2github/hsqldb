//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Data.Hsqldb.Common.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("System.Data.Hsqldb.Common.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Statement Completed Event.
        /// </summary>
        internal static string DbCommand_StatementCompletedEventHandler {
            get {
                return ResourceManager.GetString("DbCommand_StatementCompletedEventHandler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls how an open connection is established..
        /// </summary>
        internal static string DbConnection_ConnectionString {
            get {
                return ResourceManager.GetString("DbConnection_ConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database qualifier used by this connection.
        /// </summary>
        internal static string DbConnection_Database {
            get {
                return ResourceManager.GetString("DbConnection_Database", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the database server to which to connect.     
        ///    .
        /// </summary>
        internal static string DbConnection_Datasource {
            get {
                return ResourceManager.GetString("DbConnection_Datasource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version of the HSQLDB Engine accessed by this Connection..
        /// </summary>
        internal static string DbConnection_ServerVersion {
            get {
                return ResourceManager.GetString("DbConnection_ServerVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The state of this connection..
        /// </summary>
        internal static string DbConnection_State {
            get {
                return ResourceManager.GetString("DbConnection_State", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls whether an embedded database instance is shut down automatically.
        ///        
        ///When true, the database instance will shut down automatically
        ///when the number of open connections transitions from one (1)
        ///to zero (0); otherwise, the database instance remains open
        ///until an explicit:
        ///
        ///     SHUTDOWN [IMMEDIATELY|COMPACT|SCRIPT]
        ///     
        ///command is issued or the hosting process terminates.
        ///
        ///This property must be specified by the connection that opens
        ///the database;it is ignored in subsequent connectio [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DbConnectionString_AutoShutdown {
            get {
                return ResourceManager.GetString("DbConnectionString_AutoShutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the byte alignment of table data image used on disk.
        ///
        ///Allowable values are 1 (default) or 8.
        ///
        ///Setting this value to 8 specifies that record offsets are
        ///specified in 8 byte rather than the default 1 byte quanta,
        ///allowing the table data image on disk to grow to a larger 
        ///maximum size (~8 GB) than the default (~2 GB).
        ///
        ///This value must be set on a new database instance before any
        ///disk-based (CACHED) tables are created; or the affected database
        ///instance must be shut down using the &quot;SHUTDOWN  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DbConnectionString_CacheFileScale {
            get {
                return ResourceManager.GetString("DbConnectionString_CacheFileScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls the maximum number of rows from disk that the
        ///buffer manager will allow to be cached in memory.
        ///
        ///The maximum number is computed as &lt;code&gt;~3*(cache scale**2)&lt;/code&gt;.
        ///
        ///The default value is &lt;b&gt;14&lt;/b&gt; (~49152 rows).
        ///
        ///The recognized range is 8-18 min/max.
        ///
        ///Supplied values are automatically limited to min/max.
        ///
        ///This property must be specified by the connection that
        ///opens the database; it is ignored in subsequent connections.
        ///
        ///Applies only to file: protocol connections..
        /// </summary>
        internal static string DbConnectionString_CacheScale {
            get {
                return ResourceManager.GetString("DbConnectionString_CacheScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data.
        /// </summary>
        internal static string ResCategory_Data {
            get {
                return ResourceManager.GetString("ResCategory_Data", resourceCulture);
            }
        }
    }
}
