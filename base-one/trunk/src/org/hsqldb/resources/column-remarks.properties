# default column-remarks
SYSTEM_ALIASES_OBJECT_TYPE=type of the aliased object: "DOMAIN" for data type aliases and "ROUTINE" for routine call aliases
SYSTEM_ALIASES_OBJECT_CAT=catalog in which the aliased object is defined         
SYSTEM_ALIASES_OBJECT_SCHEM=schema in which the aliased object is defined     
SYSTEM_ALIASES_OBJECT_NAME=simple identifier of the aliased object   
SYSTEM_ALIASES_ALIAS_CAT=catalog in which the alias is defined         
SYSTEM_ALIASES_ALIAS_SCHEM=schema in which the alias is defined        
SYSTEM_ALIASES_ALIAS=the SQL identifier which is the alias for the indicated object              
SYSTEM_BESTROWIDENTIFIER_SCOPE=actual scope of result, as defined in java.sql.DatabaseMetadata
SYSTEM_BESTROWIDENTIFIER_COLUMN_NAME=simple column name
SYSTEM_BESTROWIDENTIFIER_DATA_TYPE=SQL data type.  This may be a java.sql.Types data type, a SQL 200n data type or an HSQLDB-specific data type.  For datetime or interval data types, this column returns the concise data type (such as SQL_­TYPE_­TIME or SQL_­INTERVAL_­YEAR_­TO_­MONTH).
SYSTEM_BESTROWIDENTIFIER_TYPE_NAME=the HSQLDB-specific data type name; this is the cannonical name used in CREATE TABLE and ALTER TABLE statements.
SYSTEM_BESTROWIDENTIFIER_COLUMN_SIZE=precision for number types; length for variable sized types; NULL for others
SYSTEM_BESTROWIDENTIFIER_BUFFER_LENGTH=The maximum length in bytes of data, if definitely known, that would be transferred to a buffer on a fetch operation.  For numeric data, this size may be different than the size of the data stored on the data source.  This value is the same as the COLUMN_SIZE column for binary data. This value is the twice the COLUMN_SIZE column for character data.  If the actual value is larger than can be represented in an INTEGER column value, this is NULL.
SYSTEM_BESTROWIDENTIFIER_DECIMAL_DIGITS=scale of column for number types
SYSTEM_BESTROWIDENTIFIER_PSEUDO_COLUMN=is this a pseudo column like an Oracle ROWID?
SYSTEM_BESTROWIDENTIFIER_TABLE_CAT=catalog in which the table containing the column is defined
SYSTEM_BESTROWIDENTIFIER_TABLE_SCHEM=schema in which the table containing the column is defined
SYSTEM_BESTROWIDENTIFIER_TABLE_NAME=simple name of the table containing the column
SYSTEM_BESTROWIDENTIFIER_NULLABLE=is the column nullable?
SYSTEM_BESTROWIDENTIFIER_IN_KEY=does column participate in primary or alternate key?
SYSTEM_BYTECODE_OBJECT_CAT=catalog in which the executable object is defined
SYSTEM_BYTECODE_OBJECT_SCHEM=schema in which the executable object is defined
SYSTEM_BYTECODE_OBJECT_NAME=simple name of executable object
SYSTEM_BYTECODE_OBJECT_TYPE=type of executable object
SYSTEM_BYTECODE_SIGNATURE=Java method signature of executable object
SYSTEM_BYTECODE_LINE=instruction line number
SYSTEM_BYTECODE_PC=instruction program counter
SYSTEM_BYTECODE_OPCODE=instruction opcode
SYSTEM_BYTECODE_MNEMONIC=instruction mnemonic
SYSTEM_BYTECODE_OPERANDS=instruction operands
SYSTEM_BYTECODE_OPERANDS_DESCRIPTION=a human-readable description of instruction operands
SYSTEM_BYTECODE_INSTRUCTION_DESCRIPTION=a human-readable description of whole instruction
SYSTEM_CACHEINFO_CACHE_CLASS=FQN of the Java Class implementing the cache
SYSTEM_CACHEINFO_CACHE_FILE=absolute path of the file underlying the cache object
SYSTEM_CACHEINFO_CACHE_LENGTH=length of the cache object's row data array        
SYSTEM_CACHEINFO_CACHE_SIZE=number of rows currently cached         
SYSTEM_CACHEINFO_FREE_BYTES=sum of all allocation units available for reuse        
SYSTEM_CACHEINFO_SMALLEST_FREE_ITEM=smallest allocation unit available for reuse
SYSTEM_CACHEINFO_LARGEST_FREE_ITEM=largest allocation unit available for reuse  
SYSTEM_CACHEINFO_FREE_COUNT=number of allocation units available for reuse         
SYSTEM_CACHEINFO_FREE_POS=one greater than largest file position known to be allocated
SYSTEM_CACHEINFO_MAX_CACHE_SIZE=maximum allowable cached Row objects     
SYSTEM_CACHEINFO_MULTIPLIER_MASK=binary mask used to calculate indicies into row data array  
SYSTEM_CACHEINFO_WRITER_LENGTH=length of row write buffer array 
SYSTEM_CATALOGS_TABLE_CAT=catalog name
SYSTEM_CLASSPRIVILEGES_CLASS_CAT=catalog in which the class is defined     
SYSTEM_CLASSPRIVILEGES_CLASS_SCHEM=schema in which the class is defined   
SYSTEM_CLASSPRIVILEGES_CLASS_NAME=fully qualified name of class    
SYSTEM_CLASSPRIVILEGES_GRANTOR=grantor of access       
SYSTEM_CLASSPRIVILEGES_GRANTEE=grantee of access       
SYSTEM_CLASSPRIVILEGES_PRIVILEGE=name of access, e.g. one of { "EXECUTE" (callable routines) | "FIRE" (fireable trigger body implementations)}     
SYSTEM_CLASSPRIVILEGES_IS_GRANTABLE=grantable?: "YES" - may grant to others, "NO" - not permitted to grant to others, NULL - unkown
SYSTEM_COLUMNPRIVILEGES_TABLE_CAT=catalog in which the table containing the column is defined
SYSTEM_COLUMNPRIVILEGES_TABLE_SCHEM=schema in which the table containing the column is defined
SYSTEM_COLUMNPRIVILEGES_TABLE_NAME=simple name of the table containing the column is defined
SYSTEM_COLUMNPRIVILEGES_COLUMN_NAME=simple name of the column
SYSTEM_COLUMNPRIVILEGES_GRANTOR=grantor of access
SYSTEM_COLUMNPRIVILEGES_GRANTEE=grantee of access
SYSTEM_COLUMNPRIVILEGES_PRIVILEGE=name of access, e.g. one of { ALL, SELECT, INSERT, UPDATE, DELETE, ...}
SYSTEM_COLUMNPRIVILEGES_IS_GRANTABLE=grantable?: YES - may grant to others, NO - not permitted to grant to others, NULL - unkown
SYSTEM_COLUMNS_TABLE_CAT=catalog in which the table containing the column is defined
SYSTEM_COLUMNS_TABLE_SCHEM=schema in which the table containing the column is defined
SYSTEM_COLUMNS_TABLE_NAME=simple name of the table containing the column
SYSTEM_COLUMNS_COLUMN_NAME=simple name of the column
SYSTEM_COLUMNS_DATA_TYPE=SQL data type.  This may be a java.sql.Types data type, a SQL 200n data type or an HSQLDB-specific data type.  For datetime or interval data types, this column returns the concise data type (such as SQL_­TYPE_­TIME or SQL_­INTERVAL_­YEAR_­TO_­MONTH).
SYSTEM_COLUMNS_TYPE_NAME=the HSQLDB-specific data type name; this is the cannonical name used in CREATE TABLE and ALTER TABLE statements.
SYSTEM_COLUMNS_COLUMN_SIZE=precision for number types; length for sized types; NULL if not applicable
SYSTEM_COLUMNS_BUFFER_LENGTH=The maximum length in bytes of data, if definitely known, that would be transferred to a buffer on a fetch operation.  For numeric data, this size may be different than the size of the data stored on the data source.  This value is the same as the COLUMN_SIZE column for binary data. This value is the twice the COLUMN_SIZE column for character data.  If the actual value is larger than can be represented in an INTEGER column value, this is NULL.
SYSTEM_COLUMNS_DECIMAL_DIGITS=# of fractional digits (scale) for number types
SYSTEM_COLUMNS_NUM_PREC_RADIX=Radix of reported numeric precision (i.e. base of number types)
SYSTEM_COLUMNS_NULLABLE=is NULL allowed?: { columnNoNulls (maybe not), columnNullable (definitely), columnNullableUnknown } 
SYSTEM_COLUMNS_REMARKS=explanitory comment describing the column (may be NULL)
SYSTEM_COLUMNS_COLUMN_DEF=default value (may be NULL)
SYSTEM_COLUMNS_SQL_DATA_TYPE=The value of the SQL data type as it would appear in the SQL CLI SQL_DESC_TYPE field of the SQLDA. 
SYSTEM_COLUMNS_SQL_DATETIME_SUB=When the value of SQL_DATA_TYPE is SQL_DATETIME or SQL_INTERVAL, this column contains the datetime/interval subcode.  For data types other than datetime and interval, this column is NULL.
SYSTEM_COLUMNS_CHAR_OCTET_LENGTH=for char types, the maximum number of bytes in the column, if the value can be represented as an INTEGER column value, else NULL 
SYSTEM_COLUMNS_ORDINAL_POSITION=index of column in table (starting at 1)
SYSTEM_COLUMNS_IS_NULLABLE=is column nullable?: { YES (might allow) | NO (definitiely not)  | '' (unknown) }
SYSTEM_COLUMNS_SCOPE_CATLOG=catalog of table that is the scope of a reference attribute (NULL if DATA_TYPE isn't REF) 
SYSTEM_COLUMNS_SCOPE_SCHEMA=schema of table that is the scope of a reference attribute (NULL if the DATA_TYPE isn't REF) 
SYSTEM_COLUMNS_SCOPE_TABLE=table name that this the scope of a reference attribure (NULL if the DATA_TYPE isn't REF) 
SYSTEM_COLUMNS_SOURCE_DATA_TYPE=source type of a distinct type or user-generated Ref type, SQL type from java.sql.Types (NULL if DATA_TYPE isn't DISTINCT or user-generated REF) 
SYSTEM_CONNECTIONINFO_KEY=KEY: { SESSION_ID | AUTOCOMMIT | USER | CONNECTION_READONLY | DATABASE_READONLY | MAXROWS | DATABASE | IDENTITY ... }
SYSTEM_CONNECTIONINFO_VALUE=VALUE: the value corresponding to the indicated key (see JavaDocs)
SYSTEM_CROSSREFERENCE_PKTABLE_CAT=the catalog in which the referenced table is defined
SYSTEM_CROSSREFERENCE_PKTABLE_SCHEM=the schema in which the referenced table is defined
SYSTEM_CROSSREFERENCE_PKTABLE_NAME=simple name of the referenced table
SYSTEM_CROSSREFERENCE_PKCOLUMN_NAME=simple name of the referenced column
SYSTEM_CROSSREFERENCE_FKTABLE_CAT=the catalog in which the referencing table is defined
SYSTEM_CROSSREFERENCE_FKTABLE_SCHEM=the schema in which the referencing table is defined
SYSTEM_CROSSREFERENCE_FKTABLE_NAME=the simple name of the referencing table
SYSTEM_CROSSREFERENCE_FKCOLUMN_NAME=the simple name of the referencing column
SYSTEM_CROSSREFERENCE_KEY_SEQ=sequence number within foreign key definiton
SYSTEM_CROSSREFERENCE_UPDATE_RULE=how does an update of referenced row columns affect referencing rows?: e.g. { Cascade | Set Null | Set Default | Restrict (No Action) }
SYSTEM_CROSSREFERENCE_DELETE_RULE=how does deletion of a referenced row affect referencing rows?: e.g. { Cascade | Set Null | Set Default | Restrict (No Action) }
SYSTEM_CROSSREFERENCE_FK_NAME=the name of the foreign key
SYSTEM_CROSSREFERENCE_PK_NAME=the name of the referenced column set (ususally the name of a primary key contraint, but may be a unique constraint or even the name of a non-unique index previous to 1.7.0)
SYSTEM_CROSSREFERENCE_DEFERRABILITY=foreign key constraints deferred until commit?: e.g. { initially deferred | initially immediate | not deferrable }
SYSTEM_INDEXINFO_TABLE_CAT=catalog in which the table using the index is defined
SYSTEM_INDEXINFO_TABLE_SCHEM=schema in which the table using the index is defined
SYSTEM_INDEXINFO_TABLE_NAME=simple name of the table using the index
SYSTEM_INDEXINFO_NON_UNIQUE=can index values be non-unique?
SYSTEM_INDEXINFO_INDEX_QUALIFIER=catalog in which the index is defined
SYSTEM_INDEXINFO_INDEX_NAME=simple name of the index
SYSTEM_INDEXINFO_TYPE=index type: e.g. { Clustered | Hashed | Other }
SYSTEM_INDEXINFO_ORDINAL_POSITION=column sequence number within index
SYSTEM_INDEXINFO_COLUMN_NAME=simple column name
SYSTEM_INDEXINFO_ASC_OR_DESC=column sort sequence: e.g. { "A" (Ascending) | "D" (Descending) }
SYSTEM_INDEXINFO_CARDINALITY=index cardinality: # of unique values in the index (currently unused)
SYSTEM_INDEXINFO_PAGES=index page use (currently unused)
SYSTEM_INDEXINFO_FILTER_CONDITION=filter condition, if any (currently unused)
SYSTEM_LOBS_NAME=Java classfile encoded absolute name of a resource ( /dir1/.../dirn/resourcename.ext)
SYSTEM_LOBS_CONTENT=binary content of Java class file or resource
SYSTEM_LOBS_CONTENT_TYPE=content type (possibly a mime-type value)
SYSTEM_LOBS_MD5=MD5 hash of content (efficiently detects and avoids attempts to reload identical content) 
SYSTEM_LOBS_CREATED=time at which content was initially loaded
SYSTEM_LOBS_MODIFIED=time at which content was last modified 
SYSTEM_PRIMARYKEYS_TABLE_CAT=catalog in which table containing primary key is defined
SYSTEM_PRIMARYKEYS_TABLE_SCHEM=schema in which table containing primary key is defined
SYSTEM_PRIMARYKEYS_TABLE_NAME=simple name of table containing primary key
SYSTEM_PRIMARYKEYS_COLUMN_NAME=simple name of column participating in primary key
SYSTEM_PRIMARYKEYS_KEY_SEQ=sequence number of column within primary key
SYSTEM_PRIMARYKEYS_PK_NAME=primary key name
SYSTEM_PROCEDURECOLUMNS_PROCEDURE_CAT=catalog in which procedure is defined
SYSTEM_PROCEDURECOLUMNS_PROCEDURE_SCHEM=schema in which procedure is defined
SYSTEM_PROCEDURECOLUMNS_PROCEDURE_NAME=procedure identifier
SYSTEM_PROCEDURECOLUMNS_COLUMN_NAME=( result column | call parameter | return value ) name
SYSTEM_PROCEDURECOLUMNS_COLUMN_TYPE=kind of column/parameter: { Unknown | IN | INOUT | OUT | RETURN | RESULT }
SYSTEM_PROCEDURECOLUMNS_DATA_TYPE=SQL data type.  This may be a java.sql.Types data type, a SQL 200n data type or an HSQLDB-specific data type.  For datetime or interval data types, this column returns the concise data type (such as SQL_­TYPE_­TIME or SQL_­INTERVAL_­YEAR_­TO_­MONTH).
SYSTEM_PROCEDURECOLUMNS_TYPE_NAME=the HSQLDB-specific data type name; for data types supported as table column types, this is the cannonical name used in CREATE TABLE and ALTER TABLE statements.
SYSTEM_PROCEDURECOLUMNS_PRECISION=precision for number types; max length for sized types; fixed or max length for others if known, or NULL if not applicable
SYSTEM_PROCEDURECOLUMNS_LENGTH=The maximum length in bytes of data, if definitely known, that would be transferred to a buffer on a fetch operation.  For numeric data, this size may be different than the size of the data stored on the data source.  This value is the same as the COLUMN_SIZE column for binary data. This value is the twice the COLUMN_SIZE column for character data.  If the actual value is unknown or is larger than can be represented in an INTEGER column value, this is NULL.
SYSTEM_PROCEDURECOLUMNS_SCALE=scale (# of fractional digits) for number types
SYSTEM_PROCEDURECOLUMNS_RADIX=Radix of reported numeric precision (i.e. base of number types)
SYSTEM_PROCEDURECOLUMNS_NULLABLE=can column contain NULL?: e.g. { No Nulls | Nullable | Unknown }
SYSTEM_PROCEDURECOLUMNS_REMARKS=comment describing parameter or result column
SYSTEM_PROCEDURECOLUMNS_SIGNATURE=the signature of the Java method providing the SQL procedure entry point
SYSTEM_PROCEDURES_PROCEDURE_CAT=catalog in which procedure is defined
SYSTEM_PROCEDURES_PROCEDURE_SCHEM=schema in which procedure is defined
SYSTEM_PROCEDURES_PROCEDURE_NAME=procedure identifier 
SYSTEM_PROCEDURES_REMARKS=explanatory comment on the procedure
SYSTEM_PROCEDURES_PROCEDURE_TYPE=kind of procedure: { Unknown | No Result | Returns Result }
SYSTEM_PROCEDURES_NUM_INPUT_PARAMS=number of procedure input parameters
SYSTEM_PROCEDURES_NUM_OUTPUT_PARAMS=number of procedure output parameters
SYSTEM_PROCEDURES_NUM_RESULT_SETS=number of result sets returned by procedure (if any)
SYSTEM_PROCEDURES_ORIGIN=how was named procedure introduced to system?: e.g. { BUILTIN | USER CLASS GRANT | ALIAS | TRIGGER | MODULE | ...}  
SYSTEM_PROCEDURES_SIGNATURE=the signature of the procedure's execution entry point, typcially the fully qualified Java method name
SYSTEM_PROPERTIES_PROPERTY_SCOPE=the scope of the property, e.g. ( TEMPORARY | TRANSACTION | SESSION | ...}     
SYSTEM_PROPERTIES_PROPERTY_NAMESPACE=the namespace in which the property is applicable, e.g. ( database.properties | org.hsqldb.Database | java.sql.DatabaseMetaData | ...) 
SYSTEM_PROPERTIES_PROPERTY_NAME=the name of the property      
SYSTEM_PROPERTIES_PROPERTY_VALUE=the current value of the property     
SYSTEM_PROPERTIES_PROPERTY_CLASS=the type of the value, e.g. ( int | boolean | java.lang.String | ...)
SYSTEM_SCHEMAS_TABLE_SCHEM=schema name
SYSTEM_SCHEMAS_TABLE_CATALOG=catalog in which schema is defined 
SYSTEM_SESSIONS_SESSION_ID=session identifier
SYSTEM_SESSIONS_CONNECTED=time at which session connected to database
SYSTEM_SESSIONS_USER_NAME=name of session user, as known to the database
SYSTEM_SESSIONS_IS_ADMIN=is session user an admin user?
SYSTEM_SESSIONS_AUTOCOMMIT=is session in autocommit mode?
SYSTEM_SESSIONS_READONLY=is session in read-only mode?
SYSTEM_SESSIONS_MAXROWS=what is the session's MAXROWS setting?
SYSTEM_SESSIONS_LAST_IDENTITY=what is the last identity value used by this session?
SYSTEM_SESSIONS_TRANSACTION_SIZE=how many undo items are there in this session's transaction buffer?
SYSTEM_SESSIONS_TRANSACTION_NESTED=is this session currently performing a nested transaction?
SYSTEM_SUPERTABLES_TABLE_CAT=the table's catalog 
SYSTEM_SUPERTABLES_TABLE_SCHEM=table schema
SYSTEM_SUPERTABLES_TABLE_NAME=table name 
SYSTEM_SUPERTABLES_SUPERTABLE_NAME=the direct super table's name
SYSTEM_SUPERTYPES_TYPE_CAT=the UDT's catalog 
SYSTEM_SUPERTYPES_TYPE_SCHEM=UDT's schema
SYSTEM_SUPERTYPES_TYPE_NAME=type name of the UDT 
SYSTEM_SUPERTYPES_SUPERTYPE_CAT=the direct super type's catalog
SYSTEM_SUPERTYPES_SUPERTYPE_SCHEM=the direct super type's schema
SYSTEM_SUPERTYPES_SUPERTYPE_NAME=the direct super type's name 
SYSTEM_TABLEPRIVILEGES_TABLE_CAT=table catalog
SYSTEM_TABLEPRIVILEGES_TABLE_SCHEM=table schema
SYSTEM_TABLEPRIVILEGES_TABLE_NAME=table name
SYSTEM_TABLEPRIVILEGES_GRANTOR=grantor of access
SYSTEM_TABLEPRIVILEGES_GRANTEE=grantee of access
SYSTEM_TABLEPRIVILEGES_PRIVILEGE=name of access: e.g. one of { ALL | SELECT | INSERT | UPDATE | DELETE }
SYSTEM_TABLEPRIVILEGES_IS_GRANTABLE=for grantee: YES - may grant to others, NO - may not grant to others, NULL - unknown
SYSTEM_TABLES_TABLE_CAT=table catalog
SYSTEM_TABLES_TABLE_SCHEM=table schema
SYSTEM_TABLES_TABLE_NAME=table name
SYSTEM_TABLES_TABLE_TYPE=table type: e.g. one of { TABLE | VIEW | SYSTEM TABLE | GLOBAL TEMPORARY ... }
SYSTEM_TABLES_REMARKS=explanatory comment on the table
SYSTEM_TABLES_TYPE_CAT=table type catalog
SYSTEM_TABLES_TYPE_SCHEM=table type schema 
SYSTEM_TABLES_TYPE_NAME=table type name 
SYSTEM_TABLES_SELF_REFERENCING_COL_NAME=name of the designated "identifier" column of typed table (null if not typed) 
SYSTEM_TABLES_REF_GENERATION=how are values in SELF_REFERENCING_COL_NAME created?: e.g. one of { "SYSTEM" | "USER" | "DERIVED" | NULL }
SYSTEM_TABLES_NEXT_IDENTITY=for tables with an identity column, the next value that will be system assigned.  NULL for all other tables          
SYSTEM_TABLES_READ_ONLY=TRUE if the table is read-only, else FALSE              
SYSTEM_TABLES_HSQLDB_TYPE=the HSQLDB-specific type of the table, e.g. ( MEMORY | CACHED | TEXT | ...)            
SYSTEM_TABLES_CACHE_FILE=for CACHED tables, the absolute path of file backing the table's Cache object.  For TEXT tables, the absolute path of the file, if any, assigned to the table with the latest, if any, 'SET TABLE ident SOURCE "spec" [DESC]' DDL.              
SYSTEM_TABLES_DATA_SOURCE=for TEXT tables, the "spec" portion of the latest, if any, 'SET TABLE ident SOURCE "spec" [DESC]' DDL issued against the table.            
SYSTEM_TABLES_IS_DESC=for TEXT tables, TRUE if the [DESC] portion was included in the latest, if any, 'SET TABLE ident SOURCE "spec" [DESC]' DDL issued against the table.
SYSTEM_TABLETYPES_TABLE_TYPE=table type name
SYSTEM_TRIGGERS_TRIGGER_CAT=Trigger catalog
SYSTEM_TRIGGERS_TRIGGER_SCHEM=Trigger Schema
SYSTEM_TRIGGERS_TRIGGER_NAME=Trigger Name
SYSTEM_TRIGGERS_TRIGGER_TYPE=When the trigger fires: { BEFORE STATEMENT | BEFORE EACH ROW | BEFORE EVENT | AFTER STATEMENT | AFTER EACH ROW | AFTER EVENT }
SYSTEM_TRIGGERS_TRIGGERING_EVENT=Events that fire the trigger: { INSERT | UPDATE | DELETE | STARTUP | SHUTDOWN | ERROR | LOGON | LOGOFF | CREATE | ALTER | DROP }
SYSTEM_TRIGGERS_TABLE_CAT=Catalog of the table on which the trigger is defined
SYSTEM_TRIGGERS_TABLE_SCHEM=for BASE_OBJECT_TYPE = TABLE or VIEW: the schema on which the trigger is defined (May be NULL); For BASE_OBJECT_TYPE = SCHEMA: USER for which CREATE, ALTER, DROP, or SET statement fires trigger; For BASE_OBJECT_TYPE = DATABASE, NULL
SYSTEM_TRIGGERS_BASE_OBJECT_TYPE=The base object on which the trigger is defined: TABLE, VIEW, SCHEMA, or DATABASE
SYSTEM_TRIGGERS_TABLE_NAME=If the base object type of the trigger is SCHEMA or DATABASE, then this column is NULL; if the base object type of the trigger is TABLE or VIEW, this columns indicates the table/view name on which the trigger is defined
SYSTEM_TRIGGERS_COLUMN_NAME=Name of the nested table column (if nested table trigger), else NULL
SYSTEM_TRIGGERS_REFERENCING_NAMES=Names used for referencing column values from within the trigger (e.g. row, old, new, etc. -- May be NULL for no parameter call-type triggers)
SYSTEM_TRIGGERS_WHEN_CLAUSE=Must evaluate to TRUE for TRIGGER_BODY to execute (NULL is considered same as no WHERE clause, i.e. always TRUE)
SYSTEM_TRIGGERS_STATUS=Whether the trigger is enabled: e.g. one of { "ENABLED" | "DISABLED" }
SYSTEM_TRIGGERS_DESCRIPTION=Trigger description. May be NULL but in most cases is the original trigger DDL
SYSTEM_TRIGGERS_ACTION_TYPE=The action type of the trigger body: "CALL" or embeded language name (e.g. "JavaScript", "Prolog", "SQLJ", "PL/SQL" "PL1", etc.)
SYSTEM_TRIGGERS_TRIGGER_BODY=Statement(s) (possiblly in embedded language) executed by the trigger when it fires; usually of the form 'CALL "package.class"'
SYSTEM_TRIGGERCOLUMNS_TRIGGER_CAT=Trigger catalog
SYSTEM_TRIGGERCOLUMNS_TRIGGER_SCHEM=Trigger schema
SYSTEM_TRIGGERCOLUMNS_TRIGGER_NAME=Trigger name
SYSTEM_TRIGGERCOLUMNS_TABLE_CAT=Catalog of the table on which the trigger is defined (May be NULL)
SYSTEM_TRIGGERCOLUMNS_TABLE_SCHEM=Schema of the table on which the trigger is defined (May be NULL)
SYSTEM_TRIGGERCOLUMNS_TABLE_NAME=Table on which the trigger is defined
SYSTEM_TRIGGERCOLUMNS_COLUMN_NAME=Name of the column used in the trigger
SYSTEM_TRIGGERCOLUMNS_COLUMN_LIST=Column specified in UPDATE clause: e.g. one of ("Y" | "N" }
SYSTEM_TRIGGERCOLUMNS_COLUMN_USAGE=How the column is used in the trigger. All applicable combinations of NEW, OLD, IN, OUT, and IN OUT
SYSTEM_TYPEINFO_TYPE_NAME=the HSQLDB-specific data type name; this is the cannonical name used in CREATE TABLE and ALTER TABLE statements.
SYSTEM_TYPEINFO_DATA_TYPE=SQL data type.  This may be a java.sql.Types data type, a SQL 200n data type or an HSQLDB-specific data type.  For datetime or interval data types, this column returns the concise data type (such as SQL_­TYPE_­TIME or SQL_­INTERVAL_­YEAR_­TO_­MONTH).
SYSTEM_TYPEINFO_PRECISION=The maximum column size for this data type.  For numeric data, this is the maximum precision.  For string data, this is the length in characters.  For datetime data types, this is the length in characters of the string representation (assuming the maximum allowed precision of the fractional seconds component).  NULL for data types where column size is not applicable.  For interval data types, this is the number of characters in the character representation of the interval literal (as defined by the interval leading precision).
SYSTEM_TYPEINFO_LITERAL_PREFIX=the character or characters used to prefix a literal of this type; for example, a single quotation mark (') for character data types; NULL for data types where a literal prefix is not applicable
SYSTEM_TYPEINFO_LITERAL_SUFFIX=the character or characters used to terminate a literal of this type; for example, a single quotation mark (') for character data types; NULL for data types where a literal suffix is not applicable
SYSTEM_TYPEINFO_CREATE_PARAMS=A list of keywords, separated by commas, corresponding to each parameter that may be specified in parentheses when issuing DDL relative to the data type.  The keywords in the list, in the language of the current Locale, may be any of the following:  length, precision, scale.  They appear in the order that the syntax requires that they be used.  For example, CREATE_PARAMS for DECIMAL with an English locale would be "precision,scale"; CREATE_PARAMS for VARCHAR would be "length".  The value is NULL if there are no parameters for the data type definition; for example, INTEGER.
SYSTEM_TYPEINFO_NULLABLE=NULL values allowed for this type?: { No Nulls | Nullable | Unknown }
SYSTEM_TYPEINFO_CASE_SENSITIVE=TRUE if the type is case-sensitive in collations and comparisons; FALSE otherwise
SYSTEM_TYPEINFO_SEARCHABLE=use of WHERE?: { None | Char (Only WHERE .. LIKE) | Basic (Except WHERE .. LIKE) | Searchable (All forms of WHERE...) }
SYSTEM_TYPEINFO_UNSIGNED_ATTRIBUTE=TRUE if the data type is unsigned; NULL the attribute is not applicable to the data type or the data type is not numeric.
SYSTEM_TYPEINFO_FIXED_PREC_SCALE=TRUE if the data type has predefined fixed precision and scale , like a money data type.  NULL for non-numeric types.
SYSTEM_TYPEINFO_AUTO_INCREMENT=NULL if the attribute is not applicable to the data type or the data type is not numeric.  If TRUE, this indicates that when an insert is made, a unique value is inserted into the column at insert time. The increment is not defined. An application should not assume that auto-increment values start at any particular point or increment by any particular value.
SYSTEM_TYPEINFO_LOCAL_TYPE_NAME=Localized version of the name of the data type; NULL if a localized name is not supported.  This name is intended for display only, such as in dialog boxes
SYSTEM_TYPEINFO_MINIMUM_SCALE=minimum scale supported
SYSTEM_TYPEINFO_MAXIMUM_SCALE=maximum scale supported
SYSTEM_TYPEINFO_SQL_DATA_TYPE=The value of the SQL data type as it would appear in the SQL CLI SQL_DESC_TYPE field of the SQLDA.
SYSTEM_TYPEINFO_SQL_DATETIME_SUB=When the value of SQL_DATA_TYPE is SQL_DATETIME or SQL_INTERVAL, this column contains the datetime/interval subcode.  For data types other than datetime and interval, this column is NULL.
SYSTEM_TYPEINFO_NUM_PREC_RADIX=For numeric types, this column contains the value 10 to indicate that COLUMN_SIZE specifies a number of decimal digits.  Otherwise, this column is NULL.        
SYSTEM_TYPEINFO_INTERVAL_PRECISION=If the data type is an interval data type, then this column contains the value of the interval leading precision.  Otherwise, this column is NULL.   
SYSTEM_TYPEINFO_AS_TAB_COL=TRUE if the engine supports this data type as a table column, else FALSE          
SYSTEM_TYPEINFO_AS_PROC_CO=TRUE if the engine supports this data type as a procedure parameter or return type, else FALSE          
SYSTEM_TYPEINFO_MAX_PREC_ACT=same as PRECISION except for data types whose precision cannot be represented by an INTEGER column value         
SYSTEM_TYPEINFO_MIN_SCALE_ACT=same as MINIMUM_SCALE except for data types whose minimum scale cannot be represented by a SMALLINT column value        
SYSTEM_TYPEINFO_MAX_SCALE_ACT=same as MAXIMUM_SCALE except for data types whose maximum scale cannot be represented by a SMALLINT column value        
SYSTEM_TYPEINFO_COL_ST_CLS_NAME=the fully qualified name of the Java class that HSQLDB uses to represent values of this type in memory      
SYSTEM_TYPEINFO_COL_ST_IS_SUP=TRUE if the Java class that HSQLDB uses to represent values of this type in memory is supported under the hosting JVM and engine build options       
SYSTEM_TYPEINFO_STD_MAP_CLS_NAME=the fully qualified name of the Java class that the JDBC standard mapping uses to represent values of this type     
SYSTEM_TYPEINFO_STD_MAP_IS_SUP=TRUE if the Java class that the JDBC standard mapping uses to represent values of this type is supported under the current JVM       
SYSTEM_TYPEINFO_CST_MAP_CLS_NAME=the fully qualified name of the Java class that HSQLDB provides to represent values of this type via the JDBC interface     
SYSTEM_TYPEINFO_CST_MAP_IS_SUP=TRUE if the Java class that HSQLDB provides to represent values of this type via the JDBC interface is supported under the hosting JVM and engine build options       
SYSTEM_TYPEINFO_MCOL_JDBC=the maximum character octet length of this type if it is representable via the JDBC interface (i.e. as an INTEGER column value)            
SYSTEM_TYPEINFO_MCOL_ACT=same as MCOL_JDBC except for data types whose maximum character octet length cannot be represented by an INTEGER column value             
SYSTEM_TYPEINFO_DEF_OR_FIXED_SCALE=the default or fixed scale of numeric types; NULL if not applicable of the type is not numeric   
SYSTEM_TYPEINFO_REMARKS=a localized explanatory comment on the data type
SYSTEM_UDTS_TYPE_CAT=type's catalog
SYSTEM_UDTS_TYPE_SCHEM=type's schema
SYSTEM_UDTS_TYPE_NAME=type's DBMS name
SYSTEM_UDTS_CLASS_NAME=type's Java class name
SYSTEM_UDTS_DATA_TYPE=type value defined in java.sql.Types, from one of { "JAVA_OBJECT" | "STRUCT" | "DISTINCT" }
SYSTEM_UDTS_REMARKS=explanatory comment on the user defined type
SYSTEM_UDTS_BASE_TYPE=type code of the source type of a DISTINCT type or the type that implements the user-generated reference type of the SELF_REFERENCING_COLUMN of a structured type as defined in java.sql.Types (null if DATA_TYPE is not DISTINCT or not STRUCT with REFERENCE_GENERATION = USER_DEFINED) 
SYSTEM_UDTATTRIBUTES_TYPE_CAT=type catalog
SYSTEM_UDTATTRIBUTES_TYPE_SCHEM=type schema
SYSTEM_UDTATTRIBUTES_TYPE_NAME=type name
SYSTEM_UDTATTRIBUTES_ATTR_NAME=attribute name
SYSTEM_UDTATTRIBUTES_DATA_TYPE=attribute type SQL type from java.sql.Types
SYSTEM_UDTATTRIBUTES_ATTR_TYPE_NAME=Data source dependent type name. For a UDT, the type name is fully qualified. For a REF, the type name is fully qualified and represents the target type of the reference type.
SYSTEM_UDTATTRIBUTES_ATTR_SIZE=column size. For char or date types this is the maximum number of characters; for numeric or decimal types this is precision.
SYSTEM_UDTATTRIBUTES_DECIMAL_DIGITS=the number of fractional digits (scale) of number type
SYSTEM_UDTATTRIBUTES_NUM_PREC_RADIX=Radix of number type
SYSTEM_UDTATTRIBUTES_NULLABLE=whether NULL is allowed
SYSTEM_UDTATTRIBUTES_REMARKS=comment describing attribute
SYSTEM_UDTATTRIBUTES_ATTR_DEF=default attribute value
SYSTEM_UDTATTRIBUTES_SQL_DATA_TYPE=The value of the SQL data type as it would appear in the SQL CLI SQL_DESC_TYPE field of the SQLDA
SYSTEM_UDTATTRIBUTES_SQL_DATETIME_SUB=When the value of SQL_DATA_TYPE is SQL_DATETIME or SQL_INTERVAL, this column contains the datetime/interval subcode.  For data types other than datetime and interval, this column is NULL.
SYSTEM_UDTATTRIBUTES_CHAR_OCTET_LENGTH=for char types the maximum number of bytes in the column
SYSTEM_UDTATTRIBUTES_ORDINAL_POSITION=index of column in table (starting at 1)
SYSTEM_UDTATTRIBUTES_IS_NULLABLE="NO" means column definitely does not allow NULL values; "YES" means the column might allow NULL values. An empty string means unknown.
SYSTEM_UDTATTRIBUTES_SCOPE_CATALOG=catalog of table that is the scope of a reference attribute (NULL if DATA_TYPE isn't REF)
SYSTEM_UDTATTRIBUTES_SCOPE_SCHEMA=schema of table that is the scope of a reference attribute (NULL if DATA_TYPE isn't REF)
SYSTEM_UDTATTRIBUTES_SCOPE_TABLE=table name that is the scope of a reference attribute (NULL if the DATA_TYPE isn't REF)
SYSTEM_UDTATTRIBUTES_SOURCE_DATA_TYPE=source type of a distinct type or user-generated Ref type,SQL type from java.sql.Types (NULL if DATA_TYPE isn't DISTINCT or user-generated REF)
SYSTEM_USERS_USER=user name
SYSTEM_USERS_ADMIN=has the administrative privilege?
SYSTEM_VERSIONCOLUMNS_TABLE_CAT=table catalog        
SYSTEM_VERSIONCOLUMNS_TABLE_SCHEM=table schema        
SYSTEM_VERSIONCOLUMNS_TABLE_NAME=simple table name 
SYSTEM_VERSIONCOLUMNS_SCOPE=not used
SYSTEM_VERSIONCOLUMNS_COLUMN_NAME=column name
SYSTEM_VERSIONCOLUMNS_DATA_TYPE=SQL data type from java.sql.Types
SYSTEM_VERSIONCOLUMNS_TYPE_NAME=Data source dependent type name
SYSTEM_VERSIONCOLUMNS_COLUMN_SIZE=precision
SYSTEM_VERSIONCOLUMNS_BUFFER_LENGTH=length of column value in bytes
SYSTEM_VERSIONCOLUMNS_DECIMAL_DIGITS=scale
SYSTEM_VERSIONCOLUMNS_PSEUDO_COLUMN=is this a pseudo column like an Oracle ROWID: { Unknown | Not Pseudo | Pseudo }
SYSTEM_VIEWSOURCE_VIEW_CAT=view catalog
SYSTEM_VIEWSOURCE_VIEW_SCHEM=view schema
SYSTEM_VIEWSOURCE_VIEW_NAME=simple view name
SYSTEM_VIEWSOURCE_VIEW_SQL=the sql that defines the view 